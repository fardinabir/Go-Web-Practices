<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6e9f1540-b448-4345-894e-a9594522dd77" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/../Go_CRUD_API/DockerfileDB" beforeDir="false" afterPath="$PROJECT_DIR$/../Go_CRUD_API/DockerfileDB" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go_CRUD_API/DockerfileServer" beforeDir="false" afterPath="$PROJECT_DIR$/../Go_CRUD_API/DockerfileServer" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go_CRUD_API/config.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/../Go_CRUD_API/config.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go_CRUD_API/docker-compose.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/../Go_CRUD_API/docker-compose.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../regestration/regestraion" beforeDir="false" afterPath="$PROJECT_DIR$/../regestration/regestraion" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2KUhUXHYTmBeaSlSi9PJpYE48f4" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_flatOrder0&quot;: &quot;0&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_flatOrder1&quot;: &quot;1&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_flatOrder2&quot;: &quot;2&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_flatOrder3&quot;: &quot;3&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_flatWidth0&quot;: &quot;457&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_flatWidth1&quot;: &quot;457&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_flatWidth2&quot;: &quot;457&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_flatWidth3&quot;: &quot;456&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_treeOrder0&quot;: &quot;0&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_treeOrder1&quot;: &quot;1&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_treeOrder2&quot;: &quot;2&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_treeOrder3&quot;: &quot;3&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_treeWidth0&quot;: &quot;457&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_treeWidth1&quot;: &quot;457&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_treeWidth2&quot;: &quot;457&quot;,
    &quot;FileHistory.git4idea.history.GitHistoryProvider_treeWidth3&quot;: &quot;456&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/pathao/go/src/github.com/fardinabir/user-access&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode.Go&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/db" />
      <recent name="$PROJECT_DIR$/server" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.user-access/DockerfileServer: Compose Deployment">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="Go_CRUD_API" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build Go_CRUD_API" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="user-access" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="Go_CRUD_API" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="Go_CRUD_API" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="Docker Image" type="docker-deploy" factoryName="docker-image" temporary="true" server-name="Docker">
      <deployment type="docker-image">
        <settings>
          <option name="imageTag" value="sha256:db91f92c05c05bec67dc31d0648d17f625c204b4ce8476aa0d8f02ac61a216c8" />
          <option name="containerName" value="GoServer" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-image" temporary="true">
      <deployment type="docker-image">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="user-access/DockerfileDB: Compose Deployment" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="buildOnly" value="true" />
          <option name="sourceFilePath" value="../user-access/DockerfileDB" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="user-access/DockerfileServer: Compose Deployment" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="" />
          <option name="sourceFilePath" value="../user-access/DockerfileServer" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.user-access/DockerfileServer: Compose Deployment" />
        <item itemvalue="Docker.Docker Image" />
        <item itemvalue="Docker.user-access/DockerfileDB: Compose Deployment" />
        <item itemvalue="Go Build.go build Go_CRUD_API" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="master" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>false</integration-enabled>
    <settings-migrated>true</settings-migrated>
  </component>
</project>